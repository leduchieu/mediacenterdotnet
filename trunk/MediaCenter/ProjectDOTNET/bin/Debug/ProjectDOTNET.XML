<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjectDOTNET</name>
    </assembly>
    <members>
        <member name="T:ProjectDOTNET.WindowMusic">
            <summary>
            WindowMusic
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowMusic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowScreenSaver">
            <summary>
            WindowScreenSaver
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowScreenSaver.Photos">
            <summary>
            Lista para cargar las fotografias
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowScreenSaver.Songs">
            <sumary>
            Lista para cargar la música
             </sumary>
        </member>
        <member name="F:ProjectDOTNET.WindowScreenSaver.currentPic">
            <summary>
            Fotografía mostrada en un momento concreto
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowScreenSaver.myDispatcherTimer2">
            <summary>
            Dispatcher para pasar de fotos cada 5 segundos
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowScreenSaver.playing">
            <summary>
            Indica si la transicion esta activa o no
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.#ctor">
            <summary>Constructor de la clase WindowImages
            <para>Carga la carpeta \Images en la lista</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.loadImages(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Al crear la ventana de imagenes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.StartTimer">
            <summary>
            Dispatcher para cambiar las imagenes cada 5 segundos
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.UpdatePhoto(System.Object,System.EventArgs)">
            <summary>
            Llama a UpdatePicture
            </summary>
            <param name="o"></param>
            <param name="sender"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.UpdatePicture">
            <summary>
            Crea una imagen de la foto en curso y le suma uno
            <para>Llama a la animacion para cambiar la transicion de fotos y modifica el valor de currentPic</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.stopEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Aumenta la visibilidad del boton Stop
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.stopLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Disminuye la visibilidad del boton Stop
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.menuLoad(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Pone en visible el menu al hacer doble clic
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.closeWindow(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Crea una ventana principal y cierra la actual
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowScreenSaver.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setRemoteHost(System.String)">
            
             Set the name of the FTP server to connect to.
            
             Server name
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.getRemoteHost">
            
             Return the name of the current FTP server.
            
             Server name
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setRemotePort(System.Int32)">
            
             Set the port number to use for FTP.
            
             Port number
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.getRemotePort">
            
             Return the current port number.
            
             Current port number
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setRemotePath(System.String)">
            
             Set the remote directory path.
            
             The remote directory path
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.getRemotePath">
            
             Return the current remote directory path.
            
             The current remote directory path.
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setRemoteUser(System.String)">
            
             Set the user name to use for logging into the remote server.
            
             Username
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setRemotePass(System.String)">
            
             Set the password to user for logging into the remote server.
            
             Password
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.getFileList(System.String)">
            
             Return a string array containing the remote directory file list.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.getFileSize(System.String)">
            
             Return the size of a file.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.login">
            
             Login to the remote server.
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setBinaryMode(System.Boolean)">
            
             If the value of mode is true, set binary mode for downloads.
             Else, set Ascii mode.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.download(System.String)">
            
             Download a file to the Assembly's local directory,
             keeping the same file name.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.download(System.String,System.Boolean)">
            
             Download a remote file to the Assembly's local directory,
             keeping the same file name, and set the resume flag.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.download(System.String,System.String)">
            
             Download a remote file to a local file name which can include
             a path. The local file name will be created or overwritten,
             but the path must exist.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.download(System.String,System.String,System.Boolean)">
            
             Download a remote file to a local file name which can include
             a path, and set the resume flag. The local file name will be
             created or overwritten, but the path must exist.
            
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.upload(System.String)">
            
             Upload a file.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.upload(System.String,System.Boolean)">
            
             Upload a file and set the resume flag.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.deleteRemoteFile(System.String)">
            
             Delete a file from the remote FTP server.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.renameRemoteFile(System.String,System.String)">
            
             Rename a file on the remote FTP server.
            
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.mkdir(System.String)">
            
             Create a directory on the remote FTP server.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.rmdir(System.String)">
            
             Delete a directory on the remote FTP server.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.chdir(System.String)">
            
             Change the current working directory on the remote FTP server.
            
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.close">
            
             Close the FTP connection.
            
        </member>
        <member name="M:ProjectDOTNET.FTPFactory.setDebug(System.Boolean)">
            
             Set debug mode.
            
            
        </member>
        <member name="T:ProjectDOTNET.WindowRSS">
            <summary>
            WindowRSS
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowRSS.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowBrowser">
            <summary>
            WindowBrowser
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowBrowser.#ctor">
            <summary>Constructor sin argumentos
            <para>La pagina por defecto es arenazero, aunque nunca se llamara a este constructor</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowBrowser.#ctor(System.String)">
            <summary>Constructor con argumentos
            <param name="link">Sirve para indicar la direccion de la web a cargar</param>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowBrowser.#ctor(System.String,System.String)">
            <summary>Constructor con argumentos
            <param name="link">Sirve para indicar la direccion de la web a cargar</param>
            <param name="aim">Sirve para indicar quien llamo al navegador (RSS o JUEGOS)</param>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.Window2">
            <summary>
            Window2
            </summary>
        </member>
        <member name="F:ProjectDOTNET.Window2.myDispatcherTimer">
            <summary>Variable para el reloj
            </summary>
        </member>
        <member name="F:ProjectDOTNET.Window2.selected">
            <summary>
            Variable para saber qué esta cargado
            </summary>
        </member>
        <member name="F:ProjectDOTNET.Window2.sonido">
            <summary>
            Variable para saber sonido
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window2.#ctor">
            <summary>
            Constructor de window2
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window2.Window_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>Metodo al iniciar la ventana principal
            <para>Obtiene la fecha y la muestra en el reloj <see cref="T:System.DateTime"/> para mas informacion sobre la hora.</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window2.StartTimer(System.Object,System.Windows.RoutedEventArgs)">
            <summary>Metodo para iniciar el dispatcher
            <para>Cada segundo llama a la funcion changeTime <see cref="T:System.Windows.Threading.DispatcherTimer"/> para mas informacion sobre dispatchers.</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window2.changeTime(System.Object,System.EventArgs)">
            <summary>Metodo para cambiar la hora mostrada
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.App">
            <summary>Clase que llama la aplicación al comenzar
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:ProjectDOTNET.App.MediaCenter_Startup(System.Object,System.Windows.StartupEventArgs)">
            <summary>Metodo al iniciar la aplicacion
            <para>Crea una ventana principal y la muestra a pantalla completa <see cref="!:System.Console.WindowState"/> para mas informacion sobre el estado de la ventana.</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ProjectDOTNET.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowImages">
            <summary>
            WindowImages
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowImages.Photos">
            <summary>
            Lista para cargar las fotografias
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowImages.currentPic">
            <summary>
            Fotografía mostrada en un momento concreto
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowImages.myDispatcherTimer2">
            <summary>
            Dispatcher para pasar de fotos cada 5 segundos
            </summary>
        </member>
        <member name="F:ProjectDOTNET.WindowImages.playing">
            <summary>
            Indica si la transicion esta activa o no
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.#ctor">
            <summary>Constructor de la clase WindowImages
            <para>Carga la carpeta \Images en la lista</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.loadImages(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Al crear la ventana de imagenes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.StartTimer">
            <summary>
            Dispatcher para cambiar las imagenes cada 5 segundos
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.UpdatePhoto(System.Object,System.EventArgs)">
            <summary>
            Llama a UpdatePicture
            </summary>
            <param name="o"></param>
            <param name="sender"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.UpdatePicture">
            <summary>
            Crea una imagen de la foto en curso y le suma uno
            <para>Llama a la animacion para cambiar la transicion de fotos y modifica el valor de currentPic</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.stopEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Aumenta la visibilidad del boton Stop
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.stopLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Disminuye la visibilidad del boton Stop
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.menuLoad(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Pone en visible el menu al hacer doble clic
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.closeWindow(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Crea una ventana principal y cierra la actual
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjectDOTNET.WindowImages.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowCredits">
            <summary>
            WindowCredits
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowCredits.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowPhone">
            <summary>
            WindowPhone
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowPhone.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.Window1">
            <summary>
            Window1
            </summary>
        </member>
        <member name="F:ProjectDOTNET.Window1.myDispatcherTimer">
            <summary>Variable para el reloj
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window1.Window_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>Metodo al iniciar la ventana principal
            <para>Obtiene la fecha y la muestra en el reloj <see cref="T:System.DateTime"/> para mas informacion sobre la hora.</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window1.StartTimer(System.Object,System.Windows.RoutedEventArgs)">
            <summary>Metodo para iniciar el dispatcher
            <para>Cada segundo llama a la funcion changeTime <see cref="T:System.Windows.Threading.DispatcherTimer"/> para mas informacion sobre dispatchers.</para>
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window1.changeTime(System.Object,System.EventArgs)">
            <summary>Metodo para cambiar la hora mostrada
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Window1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="M:ProjectDOTNET.Login.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.ImageFile">
            <summary>Esta clase guarda el path, el path convertido a Uri y un imagen
            <param name="path">Sirve para indicar el path a la imagen</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.MusicFile">
            <summary>Esta clase guarda el path y el path convertido a Uri de un archivo de música
            <param name="path">Sirve para indicar el path a la cancion</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.VideoFile">
            <summary>Esta clase guarda el path y el path convertido a Uri de un archivo de video
            <param name="path">Sirve para indicar el path al video</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.PhotoList">
            <summary>Esta clase es una coleccion de archivos ImageFile
            <param name="path">Sirve para indicar el path al directorio de fotos</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.MusicList">
            <summary>Esta clase es una coleccion de archivos MusicFile
            <param name="path">Sirve para indicar el path al directorio de canciones</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.VideoList">
            <summary>Esta clase es una coleccion de archivos de Video
            <param name="path">Sirve para indicar el path al directorio de videos</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.ObservableTelefono">
            <summary>Esta clase es una coleccion de objetos Telefono (base de datos)
            <param name="dataDc">Sirve para indicar el DataContext</param>
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowVideo">
            <summary>Esta clase se encarga de controlar el sistema de video
            </summary>
            <summary>
            WindowVideo
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowVideo.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ProjectDOTNET.WindowGames">
            <summary>
            WindowGames
            </summary>
        </member>
        <member name="M:ProjectDOTNET.WindowGames.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
